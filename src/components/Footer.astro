---
import { languagesList } from '../i18n/ui';
import { useTranslations } from '../i18n/utils';

const pathPage = (globalThis as any).BASE_URL;
const currentLang = Astro.currentLocale || 'en';
const translations = useTranslations(currentLang as keyof typeof languagesList);

interface SocialLink {
	title: string;
	icon: string;
	url: string;
}

const socialLinks: SocialLink[] = [
	{
		title: 'GitHub',
		icon: 'github.svg',
		url: 'https://github.com/cvelasquezr8',
	},
	{
		title: 'LinkedIn',
		icon: 'linkedin.svg',
		url: 'https://linkedin.com/in/cvelasquezr8',
	},
	{
		title: 'RoadMap',
		icon: 'roadmap.svg',
		url: 'https://roadmap.sh/u/cvelasquezr8',
	},
	{
		title: 'Hacker Rank',
		icon: 'hacker-rank.svg',
		url: 'https://hackerrank.com/profile/cvelasquezr8',
	},
	{
		title: 'LeetCode',
		icon: 'leetcode.svg',
		url: 'https://leetcode.com/u/cvelasquezr8/',
	},
];

interface NavigationSection {
	title: string;
	elements: {
		name: string;
		href: string;
		isTargetBlank?: boolean;
		pdfUrl?: string;
	}[];
}

const navigationLinks: NavigationSection[] = [
	{
		title: translations('footer.navigation.title'),
		elements: [
			{ name: translations('footer.navigation.home'), href: '#' },
			{
				name: translations('footer.navigation.skills'),
				href: '#technologies',
			},
			{
				name: translations('footer.navigation.projects'),
				href: '#projects',
			},
			{
				name: translations('footer.navigation.certificates'),
				href: '#courses',
			},
			{
				name: translations('footer.navigation.contact'),
				href: '#contact',
			},
		],
	},
	{
		title: translations('footer.project.title'),
		elements: [
			{
				name: translations('footer.projects.equasystem'),
				href: 'https://equasystems.netlify.app/',
				isTargetBlank: true,
			},
		],
	},
	{
		title: translations('roadmap.title'),
		elements: [
			{
				name: translations('roadmap.fitness_tracker.title'),
				href: '',
				isTargetBlank: false,
			},
			{
				name: translations('roadmap.url_shortener.title'),
				href: 'https://github.com/cvelasquezr8/url-shortening-service.git',
				isTargetBlank: true,
			},
			{
				name: translations('roadmap.task_tracker.title'),
				href: 'https://github.com/cvelasquezr8/task-tracker-cli.git',
				isTargetBlank: true,
			},
		],
	},
	{
		title: translations('footer.certificate.title'),
		elements: [
			{
				name: translations(
					'footer.certificates.hacker_rank_node_intermediate',
				),
				href: '#',
				pdfUrl: `${pathPage}certificates/nodejs-intermediate-certificate.pdf`,
			},
			{
				name: translations('footer.certificates.devtalles.nestjs'),
				href: '#',
				pdfUrl: `${pathPage}certificates/nestjs.pdf`,
			},
			{
				name: translations(
					'footer.certificates.devtalles.node_clean_architecture',
				),
				href: '#',
				pdfUrl: `${pathPage}certificates/node-clean-architecture.pdf`,
			},
			{
				name: translations(
					'footer.certificates.hacker_rank_node_basic',
				),
				href: '#',
				pdfUrl: `${pathPage}certificates/hackerrank-nodejs.pdf`,
			},
			{
				name: translations('footer.certificates.udemy_sql_advance'),
				href: '#',
				pdfUrl: `${pathPage}certificates/sql-advanced.pdf`,
			},
			{
				name: translations('footer.certificates.udemy_sql_basic'),
				href: '#',
				pdfUrl: `${pathPage}certificates/sql-basic.pdf`,
			},
		],
	},
];
---

<!-- Footer -->
<footer class="py-4 bg-gray-900/50 border-t border-blue-500/20 section-fade">
	<div class="container mx-auto px-4">
		<!-- Logo and Social Links -->
		<div
			class="flex flex-col md:flex-row items-center justify-between mb-8"
		>
			<div class="flex items-center gap-4 mb-6 md:mb-0">
				<div
					class="w-12 h-12 rounded-lg bg-gradient-to-r from-blue-600 to-purple-600 flex items-center justify-center text-white text-2xl"
				>
					ðŸš€
				</div>
				<span class="gradient-text text-xl font-bold"
					>Carlos Velasquez</span
				>
			</div>
			<div class="flex gap-4">
				{
					socialLinks.map((link) => (
						<a
							href={link.url}
							class="p-2 rounded-lg bg-gray-800/50 hover:bg-blue-500/20 transition-colors"
							title={link.title}
							target="_blank"
						>
							<img
								src={`${pathPage}images/${link.icon}`}
								alt={link.title}
								class="w-6 h-6"
								loading="lazy"
							/>
						</a>
					))
				}
			</div>
		</div>

		<div class="grid grid-cols-2 md:grid-cols-4 gap-8 mb-12">
			{
				navigationLinks.map((section) => (
					<div>
						<h3 class="text-blue-500">{section.title}</h3>
						<ul class="space-y-2">
							{section.elements.map((element) => (
								<li>
									{element.pdfUrl ? (
										<button
											onclick={`showPDFViewer('${element.pdfUrl}')`}
											class="text-gray-400 hover:text-blue-500 transition-colors text-left"
										>
											{element.name}
										</button>
									) : (
										<a
											href={element.href}
											class="text-gray-400 hover:text-blue-500 transition-colors"
											target={
												element.isTargetBlank
													? '_blank'
													: '_self'
											}
										>
											{element.name}
										</a>
									)}
								</li>
							))}
						</ul>
					</div>
				))
			}
		</div>

		<!-- Copyright -->
		<div class="text-center text-gray-400 pt-2 border-t border-blue-500/20">
			<p>
				Â© {new Date().getFullYear()} Carlos Velasquez. {
					translations('footer.rights')
				}
			</p>
			<p class="mt-2 text-sm">{translations('footer.crafted')}</p>
		</div>
	</div>
</footer>

<script>
	(window as any).showPDFViewer = function (pdfUrl: string) {
		const modal = document.querySelector('.pdf-viewer-modal');
		const iframe = modal?.querySelector('iframe');

		if (modal && iframe && pdfUrl) {
			iframe.src = pdfUrl;
			modal.classList.remove('hidden');
			document.body.style.overflow = 'hidden';
		}
	};
</script>
